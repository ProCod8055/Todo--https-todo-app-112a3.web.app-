{"version":3,"sources":["Firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Todo","props","classes","useState","open","setOpen","input","setInput","Modal","onClose","e","className","value","onChange","target","Button","onClick","collection","doc","todo","id","set","merge","List","ListItem","ListItemAvatar","ListItemText","primary","secondary","delete","App","todos","setTodos","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","disabled","type","preventDefault","add","timestamp","FieldValue","serverTimestamp","variant","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc443d41.chunk.js","sourcesContent":["// // For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n// const firebaseConfig = {\r\n    \r\n//   };\r\n\r\nimport firebase from \"firebase\";\r\n\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyCcpJXBKTHQWy3Eb_5ww5y0jJGBtEIWgyk\",\r\n    authDomain: \"todo-app-112a3.firebaseapp.com\",\r\n    projectId: \"todo-app-112a3\",\r\n    storageBucket: \"todo-app-112a3.appspot.com\",\r\n    messagingSenderId: \"270774967021\",\r\n    appId: \"1:270774967021:web:5cdfd3d33a97958a68cae4\",\r\n    measurementId: \"G-1JZ58R440X\"\r\n});\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport default db;","import React,{useState} from 'react'\r\nimport {List,ListItem,ListItemText,ListItemAvatar,Modal,Button} from '@material-ui/core';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport db from './Firebase'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 400,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction Todo(props) {\r\n\r\n  const classes = useStyles()\r\n  const[open,setOpen]=useState(false);\r\n  const[input,setInput]=useState('')\r\n\r\n\r\n  const updateTodo=() => {\r\n    db.collection(\"Todo\").doc(props.todo.id).set({\r\n    todo:input,\r\n    },{merge:true});\r\n     setOpen(false);\r\n  }\r\n\r\n    return (\r\n        <>\r\n<Modal  \r\n   open={open}\r\n   onClose={e =>setOpen(true)}\r\n  >\r\n <div className={classes.paper} >\r\n   <h1>MODAL</h1>\r\n   <input  value={input}\r\n    onChange={value => setInput(value.target.value)} />\r\n   <Button onClick={updateTodo}>update</Button>\r\n </div>\r\n</Modal>\r\n\r\n           <List className=\"todo_list\">\r\n              \r\n                <ListItem>\r\n              <ListItemAvatar>\r\n                 \r\n                </ListItemAvatar> \r\n                <ListItemText\r\n                    // primary=\"TODO\"\r\n                    // secondary={props.todo}\r\n\r\n                        //OR\r\n                    primary={props.todo.todo}\r\n                    secondary=\"do it\"\r\n  \r\n                  />\r\n                  <Button onClick={e =>setOpen(true)} >Edit</Button>\r\n                   <DeleteForeverIcon  onClick={() => db.collection('Todo').doc(props.todo.id).delete() }/>\r\n                </ListItem>\r\n               \r\n              \r\n            </List>\r\n</>            \r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React , {useState,useEffect} from 'react';\nimport db from './Firebase'\nimport './App.css';\nimport Todo from './Todo'\nimport {Button,FormControl,InputLabel,Input} from '@material-ui/core';\nimport firebase from 'firebase';\n\nfunction App() {\n  const sum=(1+1);\n  const[todos,setTodos]= useState([])\n  const[input,setInput]=useState('')\n \nuseEffect(() => {\n db.collection(\"Todo\").orderBy('timestamp','desc').onSnapshot(snapshot => {\n   setTodos(snapshot.docs.map( doc =>\n   ({ \n    id:doc.id,\n    todo:doc.data().todo})\n   ))})\n   \n }, []);\n\n\n const AddTodo=(value)=>{\n//setTodos([...todos ,input]);\nsetInput('');// clear up the input after hitting enter or button\nvalue.preventDefault();// stop the refresh\n\ndb.collection(\"Todo\").add({\n\n  todo:input,\n  timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n})\n\n }\n\n  return (\n    <div className=\"App\">\n     <h1>  Todo App  </h1>\n     \n     <form>\n \n     <FormControl>\n         <InputLabel >ADD TODOs here</InputLabel>\n         <Input value={input}\n          onChange={(value) => setInput(value.target.value)} />\n      </FormControl>\n\n      <Button disabled={!input} type='submit' onClick={AddTodo} variant=\"contained\" color=\"primary\">\n          App Todo\n      </Button>\n\n     </form>\n    \n    \n     \n       {todos.map((todo) => (\n       <Todo todo={todo}/>\n      // <li>{todo}</li>\n       ))}\n\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}